<Window x:Class="Dagorlad_7.Windows.ChatWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:gif="http://wpfanimatedgif.codeplex.com" 
        xmlns:local="clr-namespace:Dagorlad_7.Windows" xmlns:componentModel="clr-namespace:System.ComponentModel;assembly=WindowsBase"
        mc:Ignorable="d" Background="{StaticResource Background_Inside}"
        WindowStartupLocation="CenterScreen" Closing="Window_Closing"
        Icon="/chat.ico"
        Title="" Height="600" Width="900">
    <Window.Resources>
        <local:NullableContentToHidden x:Key="NullableContentToHidden"/>
        <local:WidthFixedListViewConverter x:Key="WidthFixedListViewConverter"/>
        <local:BooleanVisibilityConverter x:Key="BooleanVisibilityConverter"/>
        <local:TransparentIfSticker x:Key="TransparentIfSticker"/>
        <CollectionViewSource x:Key='src' Source="{Binding}" IsLiveSortingRequested="True">
            <CollectionViewSource.SortDescriptions>
                <componentModel:SortDescription PropertyName="user.CountUnreaded" Direction="Descending"/>
                <!--<componentModel:SortDescription PropertyName="user.Email" Direction="Ascending"/>-->
            </CollectionViewSource.SortDescriptions>
        </CollectionViewSource>
    </Window.Resources>
    <Grid x:Name="MainGrid">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>
        <Grid Tag="InformationBlock" Grid.ColumnSpan="2" Grid.Row="0" VerticalAlignment="Stretch" Height="auto">
            <Label x:Name="InformationBlockLabel" FontWeight="Normal" HorizontalContentAlignment="Center"
                   HorizontalAlignment="Stretch" Height="auto"
                   FontSize="12" Visibility="{Binding RelativeSource={RelativeSource Self}, Path=Content, Converter={StaticResource NullableContentToHidden}}"
                   Foreground="{StaticResource Foreground}" Background="{StaticResource Background_Green}"/>
        </Grid>
        <Grid x:Name="AdditionalBlock" Grid.Column="1" Grid.Row="1" VerticalAlignment="Stretch" Height="38">
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Label x:Name="NameLabel" FontWeight="Medium" Grid.Row="0"
                   VerticalContentAlignment="Center" Padding="10,0,0,0"
                   FontSize="13" Foreground="{StaticResource Foreground}" Background="{StaticResource Background_Outside}"/>
            <Label x:Name="DirectionLabel" FontWeight="Medium" Grid.Row="1"
                   VerticalContentAlignment="Center" Padding="10,0,0,0"
                   FontSize="10" Foreground="{StaticResource Foreground_Dark}" Background="{StaticResource Background_Outside}"/>
        </Grid>
        <ListView x:Name="UsersListView" Grid.Column="0" Grid.Row="1" Grid.RowSpan="3"
                  Background="{StaticResource Background_Outside}" BorderThickness="0" ItemsSource="{Binding Source={StaticResource src}}">
            <ListBox.ItemContainerStyle>
                <Style TargetType="ListBoxItem" BasedOn="{StaticResource {x:Type ListBoxItem}}">
                    <EventSetter Event="Selected" Handler="UsersListViewItem_Selected"/>
                    <EventSetter Event="Loaded" Handler="UsersListViewItem_Loaded"/>
                </Style>
            </ListBox.ItemContainerStyle>
            <ListView.ItemTemplate>
                <DataTemplate>
                    <Border Height="auto" Margin="5,2,10,2">
                        <Grid VerticalAlignment="Center">
                            <Grid.Style>
                            <Style TargetType="Grid">
                                <Style.Triggers>
                                    <EventTrigger RoutedEvent="Loaded">
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation
                             Storyboard.TargetProperty="Opacity"
                                 Duration="0:0:0.2"
                             From="0.0" To="1.0"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger>
                                </Style.Triggers>
                            </Style>
                            </Grid.Style>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                            </Grid.RowDefinitions>
                            <Border Margin="0,0,5,0" Height="30" Width="30" Grid.RowSpan="2">
                                <Image x:Name="UserLogoImage" Source="{Binding image}"/>
                            </Border>
                            <TextBlock Grid.Column="1" Text="{Binding user.Name}" FontWeight="Normal"
                                       x:Name="NameTextBlock"
                                       FontSize="14" Foreground="{StaticResource Foreground}" VerticalAlignment="Center"/>
                            <TextBlock Grid.Column="1" Grid.Row="1" TextTrimming="CharacterEllipsis"
                                       Width="120"
                                       FontSize="10" Foreground="{StaticResource Foreground_Button}"
                                       Text="{Binding user.LastMessage}"/>
                            <Border Grid.Column="2" x:Name="UnreadedCountBorder" Grid.RowSpan="2" HorizontalAlignment="Right"
                                    Visibility="{Binding user.CountUnreaded,Converter={StaticResource NullableContentToHidden}}"
                                    CornerRadius="100" Background="{StaticResource Background_Border}" Width="20" Height="20" Margin="5,0,0,0">
                                <TextBlock x:Name="UnreadedCountTextBlock"
                                           Text="{Binding user.CountUnreaded}" Foreground="{StaticResource Foreground}"  FontWeight="Medium"
                                           HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                        </Grid>
                    </Border>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>
        <ListView x:Name="DialogListView" Grid.Column="1" Grid.Row="2" ItemsSource="{Binding msgs}"
                  PreviewMouseMove="DialogListView_PreviewMouseMove" VirtualizingPanel.ScrollUnit="Pixel"
                  Background="Transparent" BorderThickness="0">
            <ListBox.ItemContainerStyle>
                <Style TargetType="ListBoxItem" BasedOn="{StaticResource {x:Type ListBoxItem}}">
                    <EventSetter Event="Loaded" Handler="DialogListViewItem_Loaded"/>
                </Style>
            </ListBox.ItemContainerStyle>
            <ListView.ItemTemplate>
                <DataTemplate>
                    <Border Width="{Binding ActualWidth,ElementName=DialogListView,Converter={StaticResource WidthFixedListViewConverter},ConverterParameter=27}"
                        Background="{Binding IsSticker,Converter={StaticResource TransparentIfSticker}}" CornerRadius="5,5,0,5" Padding="10,10,10,10" MaxWidth="300">
                        <Grid>
                            <Grid.Style>
                                <Style TargetType="Grid">
                                    <Style.Triggers>
                                        <EventTrigger RoutedEvent="Loaded">
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation
                             Storyboard.TargetProperty="Opacity"
                                 Duration="0:0:0.2"
                             From="0.0" To="1.0"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Grid.Style>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                            </Grid.RowDefinitions>
                            <Grid Grid.Row="0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="auto"/>
                                </Grid.ColumnDefinitions>
                                <Label Grid.Column="0" Foreground="{StaticResource Foreground_Button}" Padding="0" FontSize="10"
                                   VerticalContentAlignment="Center" FontWeight="Medium"
                                   Content="{Binding SenderName}"/>
                                <Label Grid.Column="1" Content="{Binding Time,StringFormat={}}" Language="RU" FontSize="8" Padding="0"
                                     Background="Transparent" Foreground="{StaticResource Foreground_Button}"/>
                            </Grid>
                            <TextBox IsReadOnly="True" Grid.Row="1" Text="{Binding Content}" Padding="0" TextWrapping="Wrap"
                                     Visibility="{Binding Converter={StaticResource BooleanVisibilityConverter},ConverterParameter=text}"
                                     Background="Transparent" Foreground="{StaticResource Foreground}" SelectionBrush="{StaticResource Background_Green}"/>
                            <Image gif:ImageBehavior.AnimatedSource="{Binding LinkSticker,TargetNullValue={x:Null}}" Margin="5"
                                   Stretch="Uniform" MaxWidth="256" MaxHeight="192" Loaded="StickerIsLoaded" gif:ImageBehavior.RepeatBehavior="Forever"
                                   Grid.Row="2" Visibility="{Binding Converter={StaticResource BooleanVisibilityConverter},ConverterParameter=sticker}"/>
                            <ListView Grid.Row="3" ItemsSource="{Binding FileLinks}" Loaded="AttachmentIsLoadedListView"
                                      Background="Transparent" BorderThickness="0" SelectionMode="Single"
                                      Visibility="{Binding Converter={StaticResource BooleanVisibilityConverter},ConverterParameter=file}">
                                <ListBox.ItemContainerStyle>
                                    <Style TargetType="{x:Type ListBoxItem}">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="ListBoxItem">
                                                    <Border Name="Border" Padding="2" SnapsToDevicePixels="true" Background="Transparent" Margin="0">
                                                        <ContentPresenter/>
                                                    </Border>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsSelected" Value="true">
                                                            <Setter TargetName="Border" Property="Background" Value="Transparent"/>
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </ListBox.ItemContainerStyle>
                                <ListView.ItemTemplate>
                                    <DataTemplate>
                                        <Button Grid.Column="1" Template="{StaticResource ButtonStandart}" Padding="0"
                                                    Foreground="{StaticResource Foreground_Button}" VerticalContentAlignment="Center"
                                                CommandParameter="{Binding Value}"  Click="OpenDownloadedFile_Click">
                                            <Button.Content>
                                                <Border Padding="5">
                                                    <Grid>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="auto"/>
                                                            <ColumnDefinition/>
                                                        </Grid.ColumnDefinitions>
                                                        <ContentPresenter Content="{StaticResource Canvas_Attachments}" VerticalAlignment="Center"/>
                                                        <TextBlock Grid.Column="1" Text="{Binding Key}" Padding="5,0,0,0" VerticalAlignment="Center"/>
                                                    </Grid>
                                                </Border>
                                            </Button.Content>
                                        </Button>
                                    </DataTemplate>
                                </ListView.ItemTemplate>
                            </ListView>
                        </Grid>
                    </Border>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>
        <Grid x:Name="MessageSendingGrid" Grid.Row="3" Grid.Column="1" Background="{StaticResource Background_Outside}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Label x:Name="TypingLabel" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Foreground="{StaticResource Foreground}"
                   FontSize="10" FontWeight="Normal" FontStyle="Italic"
                   Visibility="{Binding RelativeSource={RelativeSource Self}, Path=Content, Converter={StaticResource NullableContentToHidden}}"/>
            <Button x:Name="StickersPopupChooseButton" Height="40" Width="40"
                    Template="{StaticResource ButtonStandart}"
                    Content="{StaticResource Canvas_Stickers}" Grid.Column="0" Click="StickersPopupChooseButton_Click" Grid.Row="1"/>
            <Button x:Name="AttachmentSendButton" Height="40" Width="40"
                    Template="{StaticResource ButtonStandart}"
                    Content="{StaticResource Canvas_Attachments}" Grid.Column="1" Click="AttachmentSendButton_Click" Grid.Row="1"/>
            <TextBox x:Name="MessageTextBox" Grid.Column="2" Height="40" VerticalContentAlignment="Center"
                     SelectionBrush="{StaticResource Background_Green}"
                     PreviewKeyUp="MessageTextBox_PreviewKeyUp" Grid.Row="1" GotFocus="MessageTextBox_GotFocus"/>
            <Button x:Name="SendMessageButton" Height="40" Width="40"
                    Template="{StaticResource ButtonStandart}"
                    Content="{StaticResource Canvas_Send}" Grid.Column="3" Click="SendMessageButton_Click" Grid.Row="1"/>
        </Grid>
        <Canvas>
            <Popup x:Name="StickersPopup" StaysOpen="True" Width="650" Height="400" Visibility="Collapsed"
                   Placement="MousePoint" AllowsTransparency="True" PopupAnimation="Fade">
                <Border Background="{StaticResource Background_Outside}" Padding="5" CornerRadius="5">
                    <TabControl x:Name="StickersTabControl" ItemsSource="{Binding}" TabStripPlacement="Left" ScrollViewer.VerticalScrollBarVisibility="Visible"
                                Background="{StaticResource Background_Outside}" BorderThickness="0">
                        <TabControl.ItemContainerStyle>
                            <Style TargetType="TabItem">
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="Header" Value="{Binding name}"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type TabItem}">
                                            <Grid>
                                                <Border x:Name="border" BorderThickness="1" 
                                                        BorderBrush="{StaticResource Background_Inside_TextBox}" Padding="0">
                                                    <ContentPresenter x:Name="ContentSite" VerticalAlignment="Center"
                              ContentSource="Header" TextElement.Foreground="{StaticResource Foreground}" Margin="0" RecognizesAccessKey="True" />
                                                </Border>
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsSelected" Value="True">
                                                    <Setter Property="Panel.Background" Value="{StaticResource Background_Inside}" TargetName="border"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </TabControl.ItemContainerStyle>
                        <TabControl.Template>
                            <ControlTemplate TargetType="TabControl">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>
                                    <ScrollViewer VerticalScrollBarVisibility="Auto"  HorizontalScrollBarVisibility="Hidden" >
                                        <TabPanel x:Name="HeaderPanel"
                                          Panel.ZIndex ="1" 
                                          KeyboardNavigation.TabIndex="1"
                                          FlowDirection="LeftToRight"
                                          Grid.Column="0"
                                          Grid.Row="0"
                                          Margin="2,2,2,0"
                                          IsItemsHost="true"/>      
                                    </ScrollViewer>
                                    <ContentPresenter x:Name="PART_SelectedContentHost"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                      Margin="{TemplateBinding Padding}"
                                      ContentSource="SelectedContent" Grid.Column="1"/>
                                </Grid>
                            </ControlTemplate>
                        </TabControl.Template>
                        <TabControl.ContentTemplate>
                            <DataTemplate>
                                <ScrollViewer>
                                    <ItemsControl ItemsSource="{Binding items}">
                                        <ItemsControl.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <WrapPanel/>
                                            </ItemsPanelTemplate>
                                        </ItemsControl.ItemsPanel>
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate>
                                                <StackPanel>
                                                    <Button Template="{StaticResource ButtonStandart}" Click="SendStickerButton_Click" CommandParameter="{Binding link}">
                                                        <Image Source="{Binding image}" Width="120"/>
                                                    </Button>
                                                </StackPanel>
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                    </ItemsControl>
                                </ScrollViewer>
                            </DataTemplate>
                        </TabControl.ContentTemplate>
                    </TabControl>
                </Border>
            </Popup>
        </Canvas>
    </Grid>
</Window>
