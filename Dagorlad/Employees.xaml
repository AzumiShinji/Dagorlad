<Window x:Class="Dagorlad.Employees"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Dagorlad"
        mc:Ignorable="d"
        Title="Список сотрудников" Background="{x:Null}" AllowsTransparency="True" Height="549" Width="899" WindowStyle="None" ResizeMode="NoResize" WindowStartupLocation="CenterScreen" Margin="0,0,-4,0" MouseLeftButtonDown="Window_MouseLeftButtonDown" Icon="system_files/logo.ico">
    <Window.Resources>
        <Style x:Key="GroupHeaderStyle" TargetType="{x:Type GroupItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type GroupItem}">
                        <StackPanel>
                            <TextBlock HorizontalAlignment="Center" Text="{Binding Name}" Foreground="{DynamicResource ColorOne}"/>
                            <ItemsPresenter/>
                        </StackPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="Label">
            <Setter Property="Foreground" Value="{DynamicResource ColorOne}"/>
        </Style>
        <Style TargetType="TextBlock">
            <Setter Property="Foreground" Value="{DynamicResource ColorOne}"/>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource ColorOne}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="5" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <EventTrigger RoutedEvent="MouseEnter">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation From="Transparent" To="DarkGray" Duration="0:0:0.3" Storyboard.TargetName="border" Storyboard.TargetProperty="Background.Color"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="MouseLeave">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation From="DarkGray" To="Transparent" Duration="0:0:0.3" Storyboard.TargetName="border" Storyboard.TargetProperty="Background.Color"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="Click">
                                <BeginStoryboard>
                                    <Storyboard AutoReverse="True">
                                        <ColorAnimation To="Black" Duration="0:0:0.2" Storyboard.TargetName="border" Storyboard.TargetProperty="Background.Color"/>
                                        <ColorAnimation To="White" Duration="0:0:0.2" Storyboard.TargetProperty="(Foreground).(SolidColorBrush.Color)"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="DarkGray"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="DarkGray"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="#3b3b3b"/>
                                <Setter Property="TextBlock.Foreground" Value="Gray"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="Gray"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Border BorderThickness="1" Background="{DynamicResource ColorTwo}" Margin="10" CornerRadius="15">
        <Border.Effect>
            <DropShadowEffect ShadowDepth="4" BlurRadius="8"/>
        </Border.Effect>
        <Grid Background="Transparent">
            <DataGrid x:Name="DataGrid_Employees" ScrollViewer.CanContentScroll="False" IsReadOnly="True" 
                      SelectionUnit="CellOrRowHeader" AutoGenerateColumns="False" ItemsSource="{Binding EmployeesClass}" 
                      Background="Transparent"
                      RowHeaderWidth="0"
                      VerticalGridLinesBrush="#FF343434" HorizontalGridLinesBrush="#FF343434"
                      Foreground="{DynamicResource ColorOne}"
                      Margin="0,30,0,114" CanUserResizeRows="False">
                <DataGrid.RowStyle>
                    <Style TargetType="DataGridRow">
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="Foreground" Value="{DynamicResource ColorOne}"/>
                    </Style>
                </DataGrid.RowStyle>
                <DataGrid.CellStyle>
                    <Style TargetType="DataGridCell">
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="Foreground" Value="{DynamicResource ColorOne}"/>
                        <Setter Property="BorderBrush" Value="Transparent"/>
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="#99343434"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </DataGrid.CellStyle>
                <DataGrid.Resources>
                    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" 
                   Color="#33696969"/>
                    <Style BasedOn="{StaticResource {x:Type DataGridColumnHeader}}" TargetType="{x:Type DataGridColumnHeader}">
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="Foreground" Value="{DynamicResource ColorOne}" />
                        <Setter Property="BorderBrush" Value="#FF343434"/>
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="HorizontalContentAlignment" Value="Center"/>
                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                        <Setter Property="FontSize" Value="9"/>
                        <Setter Property="Height" Value="auto"/>
                    </Style>
                    <Style BasedOn="{StaticResource {x:Type DataGridCell}}" TargetType="{x:Type DataGridCell}">
                        <Setter Property="TextBlock.TextAlignment" Value="Center"/>
                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                    </Style>
                    <Style BasedOn="{StaticResource {x:Type ComboBoxItem}}" TargetType="{x:Type ComboBoxItem}">
                        <Setter Property="HorizontalContentAlignment" Value="Center"/>
                        <Setter Property="TextBlock.TextAlignment" Value="Center"/>
                    </Style>
                </DataGrid.Resources>
                <DataGrid.Columns>
                    <DataGridTextColumn Width="auto" Binding="{Binding Code}" Header="Код сотрудника"/>
                    <DataGridTextColumn Width="auto" Binding="{Binding FIO}" Header="ФИО"/>
                    <DataGridTextColumn Width="auto" Binding="{Binding Email}" Header="Почта"/>
                    <DataGridTextColumn Width="auto" Binding="{Binding Direction}" Header="Направление"/>
                    <DataGridTextColumn Width="*" Binding="{Binding Position}" Header="Должность"/>
                    <DataGridTextColumn Width="*" Binding="{Binding Phone}" Header="Номер телефона"/>
                    <DataGridTextColumn Width="*" Binding="{Binding BirthDate}" Header="Дата рождения"/>
                </DataGrid.Columns>
                <DataGrid.GroupStyle>
                    <GroupStyle ContainerStyle="{StaticResource GroupHeaderStyle}">
                        <GroupStyle.Panel>
                            <ItemsPanelTemplate>
                                <DataGridRowsPresenter/>
                            </ItemsPanelTemplate>
                        </GroupStyle.Panel>
                    </GroupStyle>
                </DataGrid.GroupStyle>
            </DataGrid>
            <Button x:Name="Close" Background="Transparent" VerticalContentAlignment="Center" Width="75" VerticalAlignment="Bottom" Content="Закрыть" Margin="0,0,10,10" Click="Close_Click" HorizontalAlignment="Right"/>
            <Image x:Name="employeesimg" Stretch="None" Margin="-150,0,0,0" HorizontalAlignment="Center" VerticalAlignment="Top" Width="26" Source="Resources/Employees.png"/>
            <Label Content="Список сотрудников" VerticalAlignment="Top" HorizontalContentAlignment="Center" VerticalContentAlignment="Center"/>
            <TextBlock x:Name="BirthMonthLabel" Text="Ближайшие дни рождения:" HorizontalAlignment="Left" Margin="10,0,0,0" Height="109" Width="381" TextWrapping="WrapWithOverflow" VerticalAlignment="Bottom"/>
            <TextBlock x:Name="BirthDayLabel" Text="Сегодня празднуют свой день рождения:" HorizontalAlignment="Left" Margin="406,0,0,0" Height="109" Width="381" TextWrapping="WrapWithOverflow" VerticalAlignment="Bottom"/>
        </Grid>
    </Border>
</Window>
