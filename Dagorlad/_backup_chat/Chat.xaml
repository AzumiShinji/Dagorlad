<Window x:Class="Dagorlad.Chat"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Dagorlad"
        mc:Ignorable="d"
        Background="#18191d"
        AllowsTransparency="False"
        WindowStartupLocation="CenterScreen"
        Closing="Window_Closing"
        MinHeight="500"
        MinWidth="700"
        KeyDown="Window_KeyDown"
        Title="Чат" Height="600" Width="800" Icon="chat.ico">
    <Window.Resources>
        <local:HorizontalConverter x:Key="HorizontalConverter"/>
        <local:CornerRadiusConverter x:Key="CornerRadiusConverter"/>
        <local:BrushChatConverter x:Key="BrushChatConverter"/>
        <local:OnlineUserConverter x:Key="OnlineUserConverter"/>
        <local:ImagesChatConverter x:Key="ImagesChatConverter"/>
        <local:StickersChatConverter x:Key="StickersChatConverter"/>
        <local:ImagesSourceChatConverter x:Key="ImagesSourceChatConverter"/>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="DimGray"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="Gray"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="2"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="5"
                                Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="ListBox.Static.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="ListBox.Static.Border" Color="#FFABADB3"/>
        <SolidColorBrush x:Key="ListBox.Disabled.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ListBox.Disabled.Border" Color="#FFD9D9D9"/>
        <Style TargetType="{x:Type ListBox}">
            <Setter Property="Background" Value="{StaticResource ListBox.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ListBox.Static.Border}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBox}">
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="1" SnapsToDevicePixels="true">
                            <ScrollViewer Focusable="false" Padding="{TemplateBinding Padding}">
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </ScrollViewer>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource ListBox.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ListBox.Disabled.Border}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsGrouping" Value="true"/>
                                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Item.MouseOver.Background" Color="#353c43"/>
        <SolidColorBrush x:Key="Item.MouseOver.Border" Color="#a826A0Da"/>
        <SolidColorBrush x:Key="Item.SelectedInactive.Background" Color="#009687"/>
        <SolidColorBrush x:Key="Item.SelectedInactive.Border" Color="#FFDADADA"/>
        <SolidColorBrush x:Key="Item.SelectedActive.Background" Color="#009687"/>
        <SolidColorBrush x:Key="Item.SelectedActive.Border" Color="#FF26A0DA"/>
        <Style TargetType="{x:Type ListBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Padding" Value="10"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.MouseOver.Border}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                    <Condition Property="IsSelected" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Border}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                    <Condition Property="IsSelected" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Border}"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid Background="Transparent">
        <Grid.RowDefinitions>
            <RowDefinition Height="50"/>
            <RowDefinition/>
            <RowDefinition Height="auto" MinHeight="40"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Grid x:Name="HeaderGrid" Background="#282e33" Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="0"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Label x:Name="StatusConnectionlbl" Grid.Row="0" Content="" Grid.ColumnSpan="2" 
                   Background="Transparent" Foreground="White"
                   HorizontalContentAlignment="Center" VerticalContentAlignment="Center"/>
            <Label x:Name="CurrentDialog" Content="" Foreground="White" Padding="5,5,0,0" Margin="5,0,0,0" Grid.Row="1"/>
            <Label x:Name="IsOnline" Foreground="DimGray" Padding="5" Margin="5,0,0,0" Content="" Grid.Row="2"/>
            <StackPanel Orientation="Horizontal" Grid.Column="1" HorizontalAlignment="Right" Grid.RowSpan="2" Grid.Row="1">
                <Image Source="Resources/greencircle.png" Width="8"/>
                <Label x:Name="CountOnlinelbl" Content="0"
                   VerticalContentAlignment="Center"
                   Foreground="Gray"
                   Grid.Column="1"
                   ContentStringFormat="{}{0} Онлайн"/>
            </StackPanel>
        </Grid>
        <Grid Grid.Column="0" Grid.RowSpan="3" x:Name="listofusersgrid" Background="#282e33" Visibility="Visible">
            <Grid.RowDefinitions>
                <RowDefinition Height="50"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Button x:Name="ListUsersToShortess" Click="ListUsersToShortess_Click" 
                    BorderThickness="0"
                    KeyboardNavigation.TabNavigation="None"
                            IsTabStop="False"
                    HorizontalAlignment="Left" Width="50">
                <Image x:Name="ListUsersToShortess_Image" Source="Resources/leftarrow.png" 
                       Width="20" Height="20"
                       Stretch="None" Margin="0" SnapsToDevicePixels="True" 
                       RenderOptions.BitmapScalingMode="NearestNeighbor">
                    <Image.Style>
                        <Style TargetType="{x:Type Image}">
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Opacity" Value="1"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="False">
                                    <Setter Property="Opacity" Value="0.4"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Image.Style>
                </Image>
            </Button>
            <ListBox x:Name="listofusersLB" Grid.Row="1" Grid.ColumnSpan="3" Foreground="LightGray"/>
        </Grid>
        <DataGrid x:Name="dg" IsReadOnly="True" AutoGenerateColumns="False"
                  Grid.Row="1"
                  Background="#18191d"
                  RowBackground="#18191d"
                  RowHeaderWidth="0"
                  KeyboardNavigation.TabNavigation="None"
                  ColumnHeaderHeight="0"
                  VirtualizingPanel.IsVirtualizing="True"
                VirtualizingPanel.VirtualizationMode="Recycling"
                VirtualizingPanel.ScrollUnit="Pixel"
                BorderBrush="#FF3E3A3A"
                BorderThickness="0"
                  IsTabStop="False"
                  HorizontalScrollBarVisibility="Disabled"
                ScrollViewer.CanContentScroll="False"
                HorizontalGridLinesBrush="Transparent"
                VerticalGridLinesBrush="Transparent"
                  Foreground="White" Grid.Column="1">
            <DataGrid.RowStyle>
                <Style TargetType="{x:Type DataGridRow}">
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="Transparent"/>
                        </Trigger>
                    </Style.Triggers>
                    <Setter Property="IsTabStop" Value="False"/>
                    <Setter Property="Margin" Value="0,5,0,0"/>
                </Style>
            </DataGrid.RowStyle>
            <DataGrid.CellStyle>
                <Style TargetType="{x:Type DataGridCell}">
                    <Setter Property="IsTabStop" Value="False"/>
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="BorderThickness" Value="0"/>
                            <Setter Property="Foreground" Value="White"/>
                            <Setter Property="Margin" Value="0"/>
                            <Setter Property="Padding" Value="0"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="False">
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="BorderThickness" Value="0"/>
                            <Setter Property="Foreground" Value="White"/>
                            <Setter Property="Margin" Value="0"/>
                            <Setter Property="Padding" Value="0"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.CellStyle>
            <DataGrid.Columns>
                <DataGridTemplateColumn Width="*">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Border
                                    CornerRadius="{Binding email,Converter={StaticResource CornerRadiusConverter},Mode=OneWay}" Width="auto" 
                                    Margin="5,0,5,0" 
                                    HorizontalAlignment="{Binding email,Converter={StaticResource HorizontalConverter},Mode=OneWay}" 
                                    Padding="5">
                                <Border.Style>
                                    <Style TargetType="Border">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding email,Converter={StaticResource BrushChatConverter},Mode=OneWay}" Value="True">
                                                <Setter Property="Background" Value="#2a2f33"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding email,Converter={StaticResource BrushChatConverter},Mode=OneWay}" Value="False">
                                                <Setter Property="Background" Value="#33393f"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding uri_images,Converter={StaticResource StickersChatConverter},Mode=OneWay}" Value="True">
                                                <Setter Property="Background" Value="Transparent"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <TextBlock Text="{Binding nickname,Mode=OneWay}" Grid.Column="0" Margin="5,0,0,0" 
                                                   VerticalAlignment="Center" Foreground="LightGray"/>
                                    <TextBlock Text="{Binding dt,StringFormat={}{0:HH:mm},Mode=OneWay}" Grid.Column="1" Grid.Row="1"
                                               VerticalAlignment="Bottom"
                                           Width="auto" Foreground="LightGray" FontSize="12"
                                           HorizontalAlignment="Right" Margin="5"/>
                                    <TextBox Text="{Binding message,Mode=OneWay}" Grid.Row="1" IsReadOnly="True"
                                             Background="Transparent"
                                             BorderThickness="0"
                                             TextWrapping="Wrap"
                                             SpellCheck.IsEnabled="True"
                                             AcceptsReturn="True"
                                             Foreground="White"
                                               Grid.Column="0" Grid.ColumnSpan="1" Margin="5">
                                        <TextBox.Style>
                                            <Style TargetType="TextBox">
                                                <Setter Property="SelectionBrush" Value="#009687"/>
                                            </Style>
                                        </TextBox.Style>
                                    </TextBox>
                                    <Image Visibility="{Binding uri_images,Converter={StaticResource ImagesChatConverter},Mode=OneWay}" 
                                           Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="1" 
                                           SnapsToDevicePixels="true"
                                           RenderOptions.BitmapScalingMode="NearestNeighbor"
                                           Source="{Binding uri_images,Converter={StaticResource ImagesSourceChatConverter},Mode=OneWay}"
                                           Stretch="None" MaxHeight="192" MaxWidth="192"/>
                                </Grid>
                            </Border>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>
        <Grid Grid.Row="2" Grid.ColumnSpan="1" Grid.Column="1" Background="#282e33" Margin="0,5,0,0">
            <Border x:Name="TypingBorder"
                    Padding="5,5,5,5"
                    Width="Auto" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" 
                    Margin="0,2" MouseLeave="TypingBorder_MouseLeave">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Button x:Name="ChooseSmile" Grid.Column="0" 
                            KeyboardNavigation.TabNavigation="None"
                            IsTabStop="False"
                            Padding="0"
                            Click="ChooseSmile_Click"
                          Margin="0">
                        <Image Source="Resources/smile.png" Stretch="None" Margin="0" SnapsToDevicePixels="True" RenderOptions.BitmapScalingMode="NearestNeighbor">
                            <Image.Style>
                                <Style TargetType="{x:Type Image}">
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Opacity" Value="1"/>
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="False">
                                            <Setter Property="Opacity" Value="0.4"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                        <Button.Style>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                                <Setter Property="Margin" Value="0"/>
                                <Setter Property="BorderThickness" Value="0"/>
                            </Style>
                        </Button.Style>
                    </Button>
                    <Popup x:Name="smilespopup" AllowsTransparency="True" Placement="Mouse" StaysOpen="False" PopupAnimation="Scroll">
                        <Border Background="#18191d" CornerRadius="7,7,7,0" MinHeight="200" MinWidth="200" BorderThickness="1" BorderBrush="DimGray">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="30"/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <Border BorderThickness="0,0,0,1" BorderBrush="#FF383734">
                                    <StackPanel x:Name="folderstickers" Orientation="Horizontal">
                                        <StackPanel.Style>
                                            <Style TargetType="{x:Type StackPanel}">
                                                <Style.Resources>
                                                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                                                        <Setter Property="Margin" Value="1"/>
                                                        <Setter Property="Padding" Value="5"/>
                                                    </Style>
                                                </Style.Resources>
                                            </Style>
                                        </StackPanel.Style>
                                    </StackPanel>
                                </Border>
                                <ScrollViewer x:Name="MyScrollViewer" HorizontalScrollBarVisibility="Disabled" 
                                          MaxHeight="500" Grid.Row="1"
                                              Margin="10"
                                          VerticalScrollBarVisibility="Visible">
                                    <WrapPanel x:Name="smilesgrid" Orientation="Horizontal" MaxWidth="400"/>
                                </ScrollViewer>
                            </Grid>
                        </Border>
                    </Popup>
                    <TextBox x:Name="MessageTB" Grid.Column="1" BorderBrush="#FF3E3E3E"
                             CaretBrush="White"
                             Padding="0"
                             FontSize="14"
                             Background="Transparent"
                             BorderThickness="0" Foreground="Gray" TextWrapping="NoWrap" 
                             VerticalContentAlignment="Center"
                             IsUndoEnabled="False"
                             Text="Написать сообщение..." GotFocus="Typingtb_GotFocus" LostFocus="Typingtb_LostFocus" 
                             Margin="5,0" KeyDown="Typingtb_KeyDown"/>
                </Grid>
            </Border>
        </Grid>
    </Grid>
</Window>
