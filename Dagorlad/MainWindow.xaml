<Window x:Name="window" x:Class="Dagorlad.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Dagorlad"
        xmlns:gif="http://wpfanimatedgif.codeplex.com"
        mc:Ignorable="d"
        Icon="system_files/logo.ico"
        Title="Dagorlad" 
        Height="555" Width="1073.467" 
        MinHeight="600" MinWidth="1000"
        ResizeMode="NoResize" Topmost="False" WindowStartupLocation="CenterScreen" 
        AllowsTransparency="True" WindowStyle="None" KeyDown="window_KeyDown" 
        MouseDown="window_MouseDown" MouseLeftButtonDown="window_MouseLeftButtonDown" 
        Background="{x:Null}" Closing="Window_Closing">
    <Window.Resources>
        <!--#FFD8D8D8-->
        <!--#272624-->
        <Style TargetType="Label">
            <Setter Property="Foreground" Value="{DynamicResource ColorOne}"/>
            <Setter Property="TextOptions.TextFormattingMode" Value="Display"/>
            <Setter Property="TextOptions.TextRenderingMode" Value="ClearType"/>
        </Style>
        <Style TargetType="TextBlock">
            <Setter Property="Foreground" Value="{DynamicResource ColorOne}"/>
            <Setter Property="TextOptions.TextFormattingMode" Value="Display"/>
            <Setter Property="TextOptions.TextRenderingMode" Value="ClearType"/>
        </Style>
        <Style x:Key="GroupHeaderStyle" TargetType="{x:Type GroupItem}">
            <Setter Property="TextOptions.TextFormattingMode" Value="Display"/>
            <Setter Property="TextOptions.TextRenderingMode" Value="ClearType"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type GroupItem}">
                        <Expander x:Name="exp" IsExpanded="false">
                            <Expander.Header>
                                <TextBlock Text="{Binding Name}" Foreground="{DynamicResource ColorOne}"/>
                            </Expander.Header>
                            <ItemsPresenter/>
                        </Expander>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="ToolTip" BasedOn="{StaticResource {x:Type ToolTip}}">
            <Setter Property="Background" Value="Black" />
            <Setter Property="Foreground" Value="White" />
        </Style>
        <ContextMenu x:Key="CMS">
            <ContextMenu.Resources>
                <Style TargetType="{x:Type ContextMenu}">
                    <Setter Property="SnapsToDevicePixels" Value="True"/>
                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                    <Setter Property="Grid.IsSharedSizeScope" Value="true"/>
                    <Setter Property="HasDropShadow" Value="True"/>
                    <Setter Property="TextOptions.TextFormattingMode" Value="Display"/>
                    <Setter Property="TextOptions.TextRenderingMode" Value="ClearType"/>
                    <Setter Property="Foreground" Value="{DynamicResource ColorOne}"/>
                    <Setter Property="Background" Value="{DynamicResource ColorTwo}"/>
                    <Setter Property="BorderBrush" Value="{DynamicResource ColorTwo}"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ContextMenu}">
                                <Border Name="Border" 
                                        Padding="5,10,5,10"
                  Background="{DynamicResource ColorTwo}" 
                  BorderBrush="DarkGray"
                  Margin="5"
                  BorderThickness="1" >
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle"/>
                                    <Border.Effect>
                                        <DropShadowEffect Color="Black" Opacity="0.60" ShadowDepth="4"/>
                                    </Border.Effect>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="HasDropShadow" Value="true">
                                        <Setter TargetName="Border" Property="CornerRadius" Value="3"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
                <Style TargetType="{x:Type MenuItem}">
                    <Setter Property="SnapsToDevicePixels" Value="True"/>
                    <Setter Property="Background" Value="{DynamicResource ColorTwo}"/>
                    <Setter Property="BorderThickness" Value="1"/>
                    <Setter Property="BorderBrush" Value="{DynamicResource ColorTwo}"/>
                </Style>
                <ControlTemplate x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}"
                     TargetType="{x:Type MenuItem}">
                    <Border Name="Border" Background="{DynamicResource ColorTwo}" BorderThickness="0" Padding="5">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"
                                      SharedSizeGroup="Icon" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto"
                                      SharedSizeGroup="Shortcut" />
                                <ColumnDefinition Width="13" />
                            </Grid.ColumnDefinitions>
                            <ContentPresenter Name="Icon"
                                  Margin="6,0,6,0"
                                  VerticalAlignment="Center"
                                  ContentSource="Icon" />
                            <Border Name="Check"
                        Width="13"
                        Height="13"
                        Visibility="Collapsed"
                        Margin="6,0,6,0"
                        Background="Pink"
                        BorderThickness="1"
                        BorderBrush="#5082a4">
                                <Path Name="CheckMark"
                          Width="7"
                          Height="7"
                          Visibility="Hidden"
                          SnapsToDevicePixels="False"
                          Stroke="Yellow"
                          StrokeThickness="2"
                          Data="M 0 0 L 7 7 M 0 7 L 7 0" />
                            </Border>
                            <ContentPresenter Name="HeaderHost"
                                  Grid.Column="1"
                                  ContentSource="Header"
                                  RecognizesAccessKey="True" />
                            <TextBlock x:Name="InputGestureText"
                           Grid.Column="2"
                           Text="{TemplateBinding InputGestureText}"
                           Margin="5,2,0,2"
                           DockPanel.Dock="Right" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Icon"
                     Value="{x:Null}">
                            <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Hidden" />
                        </Trigger>
                        <Trigger Property="IsChecked"
                     Value="true">
                            <Setter TargetName="CheckMark"
                        Property="Visibility"
                        Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsCheckable"
                     Value="true">
                            <Setter TargetName="Check"
                        Property="Visibility"
                        Value="Visible" />
                            <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Hidden" />
                        </Trigger>
                        <Trigger Property="IsHighlighted"
                     Value="true">
                            <Setter TargetName="Border"
                        Property="Background"
                        Value="DimGray" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                     Value="false">
                            <Setter Property="Foreground"
                        Value="#0f3c5a" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
                <ControlTemplate x:Key="{x:Static MenuItem.SubmenuHeaderTemplateKey}"
                     TargetType="{x:Type MenuItem}">
                    <Border Name="Border" Padding="5">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"
                                      SharedSizeGroup="Icon" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto"
                                      SharedSizeGroup="Shortcut" />
                                <ColumnDefinition Width="13" />
                            </Grid.ColumnDefinitions>
                            <ContentPresenter Name="Icon"
                                  Margin="6,0,6,0"
                                  VerticalAlignment="Center"
                                  ContentSource="Icon" />
                            <ContentPresenter Name="HeaderHost"
                                  Grid.Column="1"
                                  ContentSource="Header"
                                  RecognizesAccessKey="True" />
                            <TextBlock x:Name="InputGestureText"
                           Grid.Column="2"
                           Text="{TemplateBinding InputGestureText}"
                           Margin="5,2,2,2"
                           DockPanel.Dock="Right" />
                            <Path Grid.Column="3"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Center"
                      Data="M 0 0 L 0 7 L 4 3.5 Z"
                      Fill="{DynamicResource ColorOne}" />
                            <Popup Name="Popup"
                       Placement="Right"
                       HorizontalOffset="-4"
                       IsOpen="{TemplateBinding IsSubmenuOpen}"
                       AllowsTransparency="True"
                       Focusable="False"
                       PopupAnimation="Fade">
                                <Border Name="SubmenuBorder"
                            SnapsToDevicePixels="True"
                            Background="{DynamicResource ColorTwo}"
                            BorderBrush="DarkGray"
                            BorderThickness="1">
                                    <StackPanel IsItemsHost="True"
                                    KeyboardNavigation.DirectionalNavigation="Cycle" />
                                </Border>
                            </Popup>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="Icon"
                     Value="{x:Null}">
                            <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsHighlighted"
                     Value="true">
                            <Setter TargetName="Border"
                        Property="Background"
                        Value="DimGray" />
                        </Trigger>
                        <Trigger SourceName="Popup"
                     Property="Popup.AllowsTransparency"
                     Value="True">
                            <Setter TargetName="SubmenuBorder"
                        Property="CornerRadius"
                        Value="4" />
                            <Setter TargetName="SubmenuBorder"
                        Property="Padding"
                        Value="5,10,5,10" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                     Value="false">
                            <Setter Property="Foreground"
                        Value="#0f3c5a" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
                <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}"
       TargetType="{x:Type Separator}">
                    <Setter Property="MinHeight" Value="1"/>
                    <Setter Property="Margin" Value="10 5 10 5"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Separator}">
                                <Border
                                              BorderBrush="DimGray"
                                              BorderThickness="0.5"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ContextMenu.Resources>
        </ContextMenu>
        <Style TargetType="{x:Type CheckBox}">
            <Setter Property="TextOptions.TextFormattingMode" Value="Display"/>
            <Setter Property="TextOptions.TextRenderingMode" Value="ClearType"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <StackPanel Orientation="Horizontal">
                            <Image x:Name="checkboxImage" Source="Resources/checkbox_unchecked.png" Width="auto"/>
                            <ContentPresenter/>
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="checkboxImage" Property="Source" Value="Resources/checkbox_checked.png"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                    <Condition Property="IsChecked" Value="False"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="checkboxImage" Property="Source" Value="Resources/checkbox_unchecked.png"/>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="TabItem.Selected.Background" Color="#FFFFFF"/>
        <SolidColorBrush x:Key="TabItem.Selected.Border" Color="#ACACAC"/>
        <Style TargetType="{x:Type TabControl}">
            <Setter Property="TextOptions.TextFormattingMode" Value="Display"/>
            <Setter Property="TextOptions.TextRenderingMode" Value="ClearType"/>
            <Setter Property="Padding" Value="2"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabControl}">
                        <Grid x:Name="templateRoot" ClipToBounds="true" SnapsToDevicePixels="true" Background="Transparent" KeyboardNavigation.TabNavigation="Local">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="ColumnDefinition0"/>
                                <ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition x:Name="RowDefinition0" Height="Auto"/>
                                <RowDefinition x:Name="RowDefinition1" Height="*"/>
                            </Grid.RowDefinitions>
                            <TabPanel x:Name="headerPanel" Background="Transparent" Grid.Column="0" IsItemsHost="true" Margin="2,2,2,0" Grid.Row="0" KeyboardNavigation.TabIndex="1" Panel.ZIndex="1" Style="{DynamicResource TabPanelStyle1}"/>
                            <Border x:Name="contentPanel" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" Background="Transparent" Grid.Column="0" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Row="1" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
                                <ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="TabStripPlacement" Value="Bottom">
                                <Setter Property="Grid.Row" TargetName="headerPanel" Value="1"/>
                                <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
                                <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition1" Value="Auto"/>
                                <Setter Property="Margin" TargetName="headerPanel" Value="2,0,2,2"/>
                            </Trigger>
                            <Trigger Property="TabStripPlacement" Value="Left">
                                <Setter Property="Grid.Row" TargetName="headerPanel" Value="0"/>
                                <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
                                <Setter Property="Grid.Column" TargetName="headerPanel" Value="0"/>
                                <Setter Property="Grid.Column" TargetName="contentPanel" Value="1"/>
                                <Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto"/>
                                <Setter Property="Width" TargetName="ColumnDefinition1" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                                <Setter Property="Margin" TargetName="headerPanel" Value="2,2,0,2"/>
                            </Trigger>
                            <Trigger Property="TabStripPlacement" Value="Right">
                                <Setter Property="Grid.Row" TargetName="headerPanel" Value="0"/>
                                <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
                                <Setter Property="Grid.Column" TargetName="headerPanel" Value="1"/>
                                <Setter Property="Grid.Column" TargetName="contentPanel" Value="0"/>
                                <Setter Property="Width" TargetName="ColumnDefinition0" Value="*"/>
                                <Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto"/>
                                <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                                <Setter Property="Margin" TargetName="headerPanel" Value="0,2,2,2"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <LinearGradientBrush x:Key="TabItem.Static.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="Transparent" Offset="0.0"/>
            <GradientStop Color="Transparent" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="TabItem.Static.Border" Color="#ACACAC"/>
        <LinearGradientBrush x:Key="TabItem.MouseOver.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="Transparent" Offset="0.0"/>
            <GradientStop Color="Transparent" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="TabItem.MouseOver.Border" Color="#D9D9D9"/>
        <SolidColorBrush x:Key="TabItem.Disabled.Background" Color="#F0F0F0"/>
        <SolidColorBrush x:Key="TabItem.Disabled.Border" Color="#D9D9D9"/>
        <Style TargetType="{x:Type TabItem}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="Background" Value="{StaticResource TabItem.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TabItem.Static.Border}"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Padding" Value="6,2,6,2"/>
            <Setter Property="TextOptions.TextFormattingMode" Value="Display"/>
            <Setter Property="TextOptions.TextRenderingMode" Value="ClearType"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                            <Border x:Name="mainBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,1,1,0" Background="{TemplateBinding Background}" Margin="0">
                                <Border x:Name="innerBorder" BorderBrush="{StaticResource TabItem.Selected.Border}" BorderThickness="1,1,1,0" Background="{StaticResource TabItem.Selected.Background}" Margin="-1" Opacity="0"/>
                            </Border>
                            <ContentPresenter x:Name="contentPresenter" ContentSource="Header" Focusable="False" HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Panel.ZIndex" Value="1"/>
                                <Setter Property="Margin" Value="-2,-2,0,-2"/>
                                <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Panel.ZIndex" Value="1"/>
                                <Setter Property="Margin" Value="-2,0,-2,-2"/>
                                <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Panel.ZIndex" Value="1"/>
                                <Setter Property="Margin" Value="0,-2,-2,-2"/>
                                <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="0"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="0"/>
                                <Setter Property="Background" Value="Transparent"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Panel.ZIndex" Value="1"/>
                                <Setter Property="Background" Value="Transparent"/>
                            </MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3"/>
        <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA"/>
        <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5"/>
        <Style TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="#FF343434"/>
            <Setter Property="TextOptions.TextFormattingMode" Value="Display"/>
            <Setter Property="TextOptions.TextRenderingMode" Value="ClearType"/>
            <Setter Property="Foreground" Value="{DynamicResource ColorOne}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="Transparent" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                        <Condition Property="IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style TargetType="{x:Type Button}">
            <Setter Property="TextOptions.TextFormattingMode" Value="Display"/>
            <Setter Property="TextOptions.TextRenderingMode" Value="ClearType"/>
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="5" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <EventTrigger RoutedEvent="MouseEnter">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation From="Transparent" To="DarkGray" Duration="0:0:0.3" Storyboard.TargetName="border" Storyboard.TargetProperty="Background.Color"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="MouseLeave">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation From="DarkGray" To="Transparent" Duration="0:0:0.3" Storyboard.TargetName="border" Storyboard.TargetProperty="Background.Color"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="Click" Storyboard.TargetName="border">
                                <BeginStoryboard>
                                    <Storyboard AutoReverse="True">
                                        <ColorAnimation To="Pink" Duration="0:0:0.2" Storyboard.TargetProperty="Background.Color"/>
                                        <ColorAnimation To="White" Duration="0:0:0.2" Storyboard.TargetProperty="(Foreground).(SolidColorBrush.Color)"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="DarkGray"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="DarkGray"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="#3b3b3b"/>
                                <Setter Property="TextBlock.Foreground" Value="Gray"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="Gray"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Border x:Name="border" BorderBrush="#007ACD" BorderThickness="1" Margin="10" CornerRadius="15">
        <Border.Background>
            <ImageBrush x:Name="BackgroundApp" ImageSource="Resources/background.jpg" Stretch="UniformToFill"/>
        </Border.Background>
        <Border.Effect>
            <DropShadowEffect ShadowDepth="0" Color="#007ACD" BlurRadius="8"/>
        </Border.Effect>
        <Grid x:Name="MainGrid" Margin="0">
            <Button x:Name="GetCoordinates" Background="Transparent" Padding="0" HorizontalAlignment="Left" Margin="10,59,0,0" VerticalAlignment="Top" Click="GetCoordinates_Click" Height="auto" BorderThickness="0">
                <Image x:Name="imageplus" Stretch="None" Source="Resources/plus.png"/>
            </Button>
            <TextBox x:Name="X" IsReadOnly="True" HorizontalAlignment="Left" VerticalContentAlignment="Center" Height="20" Margin="35,59,0,0" TextWrapping="Wrap" Text="0" VerticalAlignment="Top" Width="34" TextAlignment="Center" Background="#A5FFFFFF"/>
            <TextBox x:Name="Y" IsReadOnly="True" HorizontalAlignment="Left" VerticalContentAlignment="Center" Height="20" Margin="74,59,0,0" TextWrapping="Wrap" Text="0" VerticalAlignment="Top" Width="34" TextAlignment="Center" Background="#A5FFFFFF"/>
            <TextBox x:Name="TimeUpToClick" HorizontalAlignment="Left" VerticalContentAlignment="Center" Height="20" Margin="113,59,0,0" TextWrapping="Wrap" Text="1500" VerticalAlignment="Top" Width="52" TextAlignment="Center" TextChanged="TimeUpToClick_TextChanged" Background="#A5FFFFFF"/>
            <TextBox x:Name="PathDirectory" HorizontalAlignment="Left" Height="23" Margin="10,102,0,0" TextWrapping="Wrap" Text="(Нажмите для изменения)" VerticalAlignment="Top" Width="155" PreviewMouseLeftButtonDown="TextBox_PreviewMouseLeftButtonDown" IsReadOnlyCaretVisible="True" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" FontSize="9" Background="#A5FFFFFF"/>
            <DataGrid x:Name="ScriptDataGrid" ScrollViewer.CanContentScroll="False" HeadersVisibility="None"
                      HorizontalAlignment="Left" Height="83" Margin="10,278,0,0" VerticalAlignment="Top"
                      Width="133" AutoGenerateColumns="False" CanUserReorderColumns="False" 
                      CanUserResizeColumns="False" CanUserSortColumns="False" CanUserResizeRows="False" 
                      CanUserAddRows="False" CanUserDeleteRows="True" RenderTransformOrigin="0.5,0.5"
                      HorizontalGridLinesBrush="DimGray"
                      VerticalGridLinesBrush="DimGray"
                      Background="Transparent" BorderBrush="#FF343434" FontSize="9" Foreground="{DynamicResource ColorOne}">
                <DataGrid.RowStyle>
                    <Style TargetType="DataGridRow">
                        <Setter Property="Background" Value="Transparent"/>
                    </Style>
                </DataGrid.RowStyle>
                <DataGrid.Columns>
                    <DataGridTextColumn Width="*" Binding="{Binding OwnName}" ClipboardContentBinding="{x:Null}" Header="Header" CanUserResize="False" IsReadOnly="false"/>
                    <DataGridTextColumn Width="*" Binding="{Binding X}" ClipboardContentBinding="{x:Null}" Header="X" CanUserResize="False" IsReadOnly="false"/>
                    <DataGridTextColumn Width="*" Binding="{Binding Y}" ClipboardContentBinding="{x:Null}" Header="Y" CanUserResize="False" IsReadOnly="false"/>
                    <DataGridTextColumn Width="*" Binding="{Binding Scenario}" ClipboardContentBinding="{x:Null}" Header="Scenario" CanUserResize="False" IsReadOnly="false"/>
                </DataGrid.Columns>
            </DataGrid>
            <Button x:Name="GetScriptCoordinates" HorizontalAlignment="Left" Padding="0" Margin="145,278,0,0" VerticalAlignment="Top" Background="Transparent" BorderThickness="0" Click="GetScriptCoordinates_Click">
                <Image x:Name="GetScriptCoordinatesImg" Stretch="None" Source="Resources/plus.png"/>
            </Button>
            <Label x:Name="AutoClickerLabel" Content="Автокликер (Scroll Lock)" FontWeight="Medium" HorizontalAlignment="Left" Margin="10,37,0,0" VerticalAlignment="Top" FontSize="10" VerticalContentAlignment="Center"/>
            <Label x:Name="ClearLabel" Content="Очистка директории (Pause)" FontWeight="Medium" HorizontalAlignment="Left" Margin="10,80,0,0" VerticalAlignment="Top" FontSize="10" RenderTransformOrigin="0.438,0.435" ToolTip="Очистка директории указанной ниже" VerticalContentAlignment="Center"/>
            <Image x:Name="OnOff" HorizontalAlignment="Left" Height="38" Margin="10,149,0,0" VerticalAlignment="Top" Source="Resources/button_off.png" MouseLeftButtonDown="OnOff_MouseLeftButtonDown" ToolTip="Вкл/Откл отображение контекстного меню" Width="38"/>
            <Label Content="Выключить/Включить" FontSize="10" HorizontalAlignment="Left" Margin="53,149,0,0" VerticalAlignment="Top" Height="38" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Width="112" ToolTip="Вкл/Откл отображение контекстного меню"/>
            <Label x:Name="ContextMenuLabel" Content="Контекстное меню (Right Button)" FontWeight="Medium" HorizontalAlignment="Left" Margin="10,125,0,0" VerticalAlignment="Top" FontSize="10" RenderTransformOrigin="0.438,0.435" ToolTip="При нажатии правой кнопки мыши появится контекстное меню с экземпярами типичных ответов" Height="24" VerticalContentAlignment="Center"/>
            <Label x:Name="ScriptLabel" Content="Скрипт (Middle Button)" FontWeight="Medium" HorizontalAlignment="Left" Margin="10,254,0,0" VerticalAlignment="Top" FontSize="10" RenderTransformOrigin="0.438,0.435" ToolTip="При нажати на среднюю кнопку мыши, скрипт пробегает по всем координатам указаным ниже и выполняет действие левой кнопки мыши" Height="24" VerticalContentAlignment="Center" Width="166"/>
            <Button x:Name="AddListItemResources" Background="Transparent" Padding="0" BorderThickness="0" HorizontalAlignment="Left" Margin="147,390,0,0" VerticalAlignment="Top" Click="AddListItemResources_Click">
                <Image x:Name="filesimg" Stretch="None" Source="Resources/files.png"/>
            </Button>
            <DataGrid x:Name="ResourcesGrid" ScrollViewer.CanContentScroll="False" HeadersVisibility="None"
                      HorizontalAlignment="Left" Margin="10,390,0,32" 
                      Width="133" AutoGenerateColumns="False" CanUserReorderColumns="False" 
                      CanUserResizeColumns="False" CanUserSortColumns="False" CanUserResizeRows="False"
                      CanUserAddRows="False" CanUserDeleteRows="True" RenderTransformOrigin="0.759,-0.595" 
                      Background="#00000000" BorderBrush="#FF343434" 
                      PreviewMouseDoubleClick="ResourcesGrid_PreviewMouseDoubleClick" FontSize="9" 
                      HorizontalGridLinesBrush="DimGray"
                      VerticalGridLinesBrush="DimGray"
                      Foreground="{DynamicResource ColorOne}"
                      PreviewKeyUp="ResourcesGrid_PreviewKeyUp">
                <DataGrid.Columns>
                    <DataGridTextColumn Width="2*" Binding="{Binding _Name}" ClipboardContentBinding="{x:Null}" Header="_Name" CanUserResize="False" IsReadOnly="true"/>
                    <DataGridTextColumn Width="*" Binding="{Binding _Source}" ClipboardContentBinding="{x:Null}" Header="_Source" CanUserResize="False" IsReadOnly="true"/>
                </DataGrid.Columns>
                <DataGrid.RowStyle>
                    <Style TargetType="DataGridRow">
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="ToolTip">
                            <Setter.Value>
                                <TextBlock Text="{Binding _Source}" />
                            </Setter.Value>
                        </Setter>
                    </Style>
                </DataGrid.RowStyle>
            </DataGrid>
            <Label Content="Ресурсы быстрого доступа" FontWeight="Medium" HorizontalAlignment="Left" Margin="10,366,0,0" VerticalAlignment="Top" FontSize="10" RenderTransformOrigin="0.438,0.435" ToolTip="Ресурсы для быстрого доступа, открывается двойным нажатием кнопки мыши" Height="24" HorizontalContentAlignment="Center" VerticalContentAlignment="Bottom"/>
            <Button x:Name="AddListItemResources_Folder" HorizontalAlignment="Left" Padding="0" Margin="148,419,0,0" VerticalAlignment="Top" Background="Transparent" BorderThickness="0" Click="AddListItemResources_Click_Folder">
                <Image x:Name="folderimg" Stretch="None" Source="Resources/folder.png"/>
            </Button>
            <Label Content="Код (ИНН, ОГРН, СВР, КПП, ПГМУ) (Ctrl+C,Ctrl+Space)" FontWeight="Medium" HorizontalAlignment="Left" Margin="176,36,0,0" VerticalAlignment="Top" FontSize="9" RenderTransformOrigin="0.438,0.435" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Height="23" Padding="0"/>
            <ProgressBar x:Name="LoaderOrg" IsEnabled="False" Visibility="Collapsed" Margin="176,75,0,0" Background="{x:Null}" BorderThickness="0" Foreground="#FF007ACD" IsIndeterminate="True" HorizontalAlignment="Left" Width="419" VerticalAlignment="Top" Height="3">
                <ProgressBar.Effect>
                    <DropShadowEffect ShadowDepth="0" Color="#007ACD" BlurRadius="8"/>
                </ProgressBar.Effect>
            </ProgressBar>
            <RichTextBox IsDocumentEnabled="True" x:Name="InfoAboutOrg_RichTextBox" IsReadOnly="True" VerticalScrollBarVisibility="Auto" BorderBrush="#FF343434" Margin="176,79,0,32" Background="Transparent" Foreground="{DynamicResource ColorOne}" Width="419" HorizontalAlignment="Left">
                <RichTextBox.Resources>
                    <Style TargetType="RichTextBox">
                        <Setter Property="TextOptions.TextFormattingMode" Value="Display"/>
                        <Setter Property="TextOptions.TextRenderingMode" Value="ClearType"/>
                    </Style>
                </RichTextBox.Resources>
                <FlowDocument>
                    <Paragraph>
                        <Run Text="Здесь будет отображаться информация об организациях из реестра участников и неучастников бюджетного процесса. (Поиск автоматический, всякий раз при обновлении буфера обмена)"/>
                    </Paragraph>
                    <Paragraph>
                        <Run Text="Дата обновления базы данных указана в нижней части программы."/>
                    </Paragraph>
                    <Paragraph>
                        <Run Foreground="Red" Text="Важно!"/>
                        <Run Text="Если нет совпадений по кодам организаций, то код определяется как номер обращения."/>
                    </Paragraph>
                    <Paragraph>
                        <Run Foreground="SlateGray" Text="Информация."/>
                        <Run Text="Если найдена 1 (единственная) организация по коду, то информация по ней будет сохранена. Информацию можно вставить с помощью сочетания клавиш Ctrl+Space."/>
                    </Paragraph>
                </FlowDocument>
            </RichTextBox>
            <Label x:Name="Status_CountOrg" Content="Найдено организаций:" HorizontalAlignment="Left" Margin="176,55,0,0" VerticalAlignment="Top" FontSize="10" RenderTransformOrigin="0.438,0.435" HorizontalContentAlignment="Left" VerticalContentAlignment="Center" Height="17" Padding="0" Width="129"/>
            <TabControl BorderBrush="Transparent" Margin="600,45,10,30" Background="{x:Null}">
                <TabItem FontSize="9">
                    <TabItem.Header>
                        <TextBlock FontWeight="Medium" Foreground="{DynamicResource ColorOne}">
                            Каталог назначений ГП (Enter)
                        </TextBlock>
                    </TabItem.Header>
                    <Grid Background="Transparent">
                        <ProgressBar x:Name="LoaderCatalog" IsEnabled="False" Visibility="Collapsed" Background="{x:Null}" BorderThickness="0" Foreground="#FF007ACD" IsIndeterminate="True" VerticalAlignment="Top" Height="3" Margin="0,23,0,0">
                            <ProgressBar.Effect>
                                <DropShadowEffect ShadowDepth="0" Color="#007ACD" BlurRadius="8"/>
                            </ProgressBar.Effect>
                        </ProgressBar>
                        <DataGrid x:Name="DataGrid_Catalog" HorizontalScrollBarVisibility="Disabled" ScrollViewer.CanContentScroll="False" ItemsSource="{Binding ListCatalog}"
                                  HeadersVisibility="All" Margin="0,27,0,0"
                                  AutoGenerateColumns="False" CanUserReorderColumns="False" CanUserResizeColumns="True" CanUserSortColumns="False" CanUserResizeRows="False" 
                                  CanUserAddRows="False" CanUserDeleteRows="False" BorderBrush="#FF343434" FontSize="12" 
                                  VirtualizingPanel.ScrollUnit="Pixel"
                                  SelectionUnit="Cell" RowHeaderWidth="0"  VerticalGridLinesBrush="#FF343434" HorizontalGridLinesBrush="#FF343434" Grid.ColumnSpan="2" Background="Transparent" Foreground="{DynamicResource ColorOne}">
                            <DataGrid.RowStyle>
                                <Style TargetType="DataGridRow">
                                    <Setter Property="Background" Value="Transparent"/>
                                    <Setter Property="Foreground" Value="{DynamicResource ColorOne}"/>
                                    <Setter Property="TextOptions.TextFormattingMode" Value="Display"/>
                                    <Setter Property="TextOptions.TextRenderingMode" Value="ClearType"/>
                                </Style>
                            </DataGrid.RowStyle>
                            <DataGrid.Resources>
                                <Style BasedOn="{StaticResource {x:Type DataGridColumnHeader}}" TargetType="{x:Type DataGridColumnHeader}">
                                    <Setter Property="Background" Value="Transparent"></Setter>
                                    <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
                                    <Setter Property="FontSize" Value="10"></Setter>
                                    <Setter Property="Height" Value="auto"></Setter>
                                    <Setter Property="TextOptions.TextFormattingMode" Value="Display"/>
                                    <Setter Property="TextOptions.TextRenderingMode" Value="ClearType"/>
                                    <Setter Property="BorderBrush" Value="#FF343434"></Setter>
                                    <Setter Property="BorderThickness" Value="0,0,1,1"></Setter>
                                </Style>
                            </DataGrid.Resources>
                            <DataGrid.Columns>
                                <DataGridTextColumn Width="auto" Binding="{Binding id}" ClipboardContentBinding="{x:Null}" Header="ID" CanUserResize="True" IsReadOnly="true">
                                    <DataGridTextColumn.CellStyle>
                                        <Style TargetType="DataGridCell">
                                            <Setter Property="ToolTip">
                                                <Setter.Value>
                                                    <TextBlock Text="{Binding id}" />
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </DataGridTextColumn.CellStyle>
                                </DataGridTextColumn>
                                <DataGridTextColumn Width="*" Binding="{Binding Groups}" ClipboardContentBinding="{x:Null}" Header="Группа" CanUserResize="True" IsReadOnly="true">
                                    <DataGridTextColumn.CellStyle>
                                        <Style TargetType="DataGridCell">
                                            <Setter Property="ToolTip">
                                                <Setter.Value>
                                                    <TextBlock Text="{Binding Groups}" />
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </DataGridTextColumn.CellStyle>
                                </DataGridTextColumn>
                                <DataGridTextColumn Width="*" Binding="{Binding Services}" ClipboardContentBinding="{x:Null}" Header="ИТ-Сервис" CanUserResize="True" IsReadOnly="true">
                                    <DataGridTextColumn.CellStyle>
                                        <Style TargetType="DataGridCell">
                                            <Setter Property="ToolTip">
                                                <Setter.Value>
                                                    <TextBlock Text="{Binding Services}" />
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </DataGridTextColumn.CellStyle>
                                </DataGridTextColumn>
                                <DataGridTextColumn Width="*" Binding="{Binding Function}" ClipboardContentBinding="{x:Null}" Header="Функциональная область" CanUserResize="True" IsReadOnly="true">
                                    <DataGridTextColumn.CellStyle>
                                        <Style TargetType="DataGridCell">
                                            <Setter Property="ToolTip">
                                                <Setter.Value>
                                                    <TextBlock Text="{Binding Function}" />
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </DataGridTextColumn.CellStyle>
                                </DataGridTextColumn>
                            </DataGrid.Columns>
                            <DataGrid.GroupStyle>
                                <GroupStyle ContainerStyle="{StaticResource GroupHeaderStyle}">
                                    <GroupStyle.Panel>
                                        <ItemsPanelTemplate>
                                            <DataGridRowsPresenter/>
                                        </ItemsPanelTemplate>
                                    </GroupStyle.Panel>
                                </GroupStyle>
                            </DataGrid.GroupStyle>
                        </DataGrid>
                        <Border x:Name="SearchBorder" Margin="0" BorderBrush="#FF3E3E3E" BorderThickness="1" VerticalAlignment="Top">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="20"/>
                                </Grid.ColumnDefinitions>
                                <TextBox x:Name="SearchCatalog" Grid.Column="0" VerticalContentAlignment="Center" Padding="5,0,5,0" 
                                         BorderBrush="#FF343434" Background="Transparent" BorderThickness="0" Foreground="{DynamicResource ColorOne}" Height="20" 
                                         TextWrapping="NoWrap" Text="Введите ключевые слова и нажмите 'Enter', оставьте поле пустым для получения всего списка" FontSize="9" 
                                         TextOptions.TextFormattingMode="Display" TextOptions.TextRenderingMode="ClearType"
                                         IsTabStop="False"
                                         PreviewKeyUp="SearchCatalog_PreviewKeyUp" GotFocus="SearchCatalog_GotFocus" LostFocus="SearchCatalog_LostFocus"/>
                                <Image x:Name="SearchCatalog_img" HorizontalAlignment="Right" Grid.Column="1" Source="Resources/lupa.png" Stretch="None" Margin="0,0,5,0"/>
                            </Grid>
                        </Border>
                    </Grid>
                </TabItem>
                <TabItem FontSize="9">
                    <TabItem.Header>
                        <TextBlock FontWeight="Medium" Foreground="{DynamicResource ColorOne}">
                            Телефонный справочник: ЦА ФК, ФКУ, Профсоюз, ТОФК (Enter)
                        </TextBlock>
                    </TabItem.Header>
                    <Grid Background="Transparent">
                        <ProgressBar x:Name="LoaderHandbook" IsEnabled="False" Visibility="Collapsed" Background="{x:Null}" BorderThickness="0" Foreground="#FF007ACD" IsIndeterminate="True" VerticalAlignment="Top" Height="3" Margin="0,23,0,0">
                            <ProgressBar.Effect>
                                <DropShadowEffect ShadowDepth="0" Color="#007ACD" BlurRadius="8"/>
                            </ProgressBar.Effect>
                        </ProgressBar>
                        <DataGrid x:Name="DataGrid_Handbook" ScrollViewer.CanContentScroll="False" ItemsSource="{Binding Handbook_Class}"
                                  HeadersVisibility="All" Margin="0,27,0,0"
                                  AutoGenerateColumns="False" CanUserReorderColumns="False" CanUserResizeColumns="True" CanUserSortColumns="False"
                                  CanUserResizeRows="False" CanUserAddRows="False" CanUserDeleteRows="False" RenderTransformOrigin="0.5,0.5"
                                  BorderBrush="#FF343434" RowHeaderWidth="0"  FontSize="12" SelectionUnit="Cell" 
                                  VerticalGridLinesBrush="#FF343434" HorizontalGridLinesBrush="#FF343434"
                                  VirtualizingPanel.ScrollUnit="Pixel"
                                  Grid.ColumnSpan="2" Background="Transparent" Foreground="{DynamicResource ColorOne}">
                            <DataGrid.RowStyle>
                                <Style TargetType="DataGridRow">
                                    <Setter Property="Background" Value="Transparent"/>
                                    <Setter Property="TextOptions.TextFormattingMode" Value="Display"/>
                                    <Setter Property="TextOptions.TextRenderingMode" Value="ClearType"/>
                                </Style>
                            </DataGrid.RowStyle>
                            <DataGrid.Columns>
                                <DataGridTextColumn Width="auto" Binding="{Binding Target}" ClipboardContentBinding="{x:Null}" Header="Орган" CanUserResize="True" IsReadOnly="true">
                                    <DataGridTextColumn.HeaderStyle>
                                        <Style TargetType="{x:Type DataGridColumnHeader}">
                                            <Setter Property="Background" Value="Transparent"></Setter>
                                            <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
                                            <Setter Property="FontSize" Value="10"></Setter>
                                            <Setter Property="Height" Value="auto"></Setter>
                                            <Setter Property="BorderBrush" Value="#FF343434"></Setter>
                                            <Setter Property="BorderThickness" Value="0,0,1,1"></Setter>
                                        </Style>
                                    </DataGridTextColumn.HeaderStyle>
                                    <DataGridTextColumn.CellStyle>
                                        <Style TargetType="DataGridCell">
                                            <Setter Property="ToolTip">
                                                <Setter.Value>
                                                    <TextBlock Text="{Binding Target}" />
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </DataGridTextColumn.CellStyle>
                                </DataGridTextColumn>
                                <DataGridTextColumn Width="auto" Binding="{Binding FIO}" ClipboardContentBinding="{x:Null}" Header="ФИО" CanUserResize="True" IsReadOnly="true">
                                    <DataGridTextColumn.HeaderStyle>
                                        <Style TargetType="{x:Type DataGridColumnHeader}">
                                            <Setter Property="Background" Value="Transparent"></Setter>
                                            <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
                                            <Setter Property="FontSize" Value="10"></Setter>
                                            <Setter Property="Height" Value="auto"></Setter>
                                            <Setter Property="BorderBrush" Value="#FF343434"></Setter>
                                            <Setter Property="BorderThickness" Value="0,0,1,1"></Setter>
                                        </Style>
                                    </DataGridTextColumn.HeaderStyle>
                                    <DataGridTextColumn.CellStyle>
                                        <Style TargetType="DataGridCell">
                                            <Setter Property="ToolTip">
                                                <Setter.Value>
                                                    <TextBlock Text="{Binding FIO}" />
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </DataGridTextColumn.CellStyle>
                                </DataGridTextColumn>
                                <DataGridTextColumn Width="*" Binding="{Binding Position}" ClipboardContentBinding="{x:Null}" Header="Должность" CanUserResize="True" IsReadOnly="true">
                                    <DataGridTextColumn.HeaderStyle>
                                        <Style TargetType="{x:Type DataGridColumnHeader}">
                                            <Setter Property="Background" Value="Transparent"></Setter>
                                            <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
                                            <Setter Property="FontSize" Value="10"></Setter>
                                            <Setter Property="Height" Value="auto"></Setter>
                                            <Setter Property="BorderBrush" Value="#FF343434"></Setter>
                                            <Setter Property="TextOptions.TextFormattingMode" Value="Display"/>
                                            <Setter Property="TextOptions.TextRenderingMode" Value="ClearType"/>
                                            <Setter Property="BorderThickness" Value="0,0,1,1"></Setter>
                                        </Style>
                                    </DataGridTextColumn.HeaderStyle>
                                    <DataGridTextColumn.CellStyle>
                                        <Style TargetType="DataGridCell">
                                            <Setter Property="ToolTip">
                                                <Setter.Value>
                                                    <TextBlock Text="{Binding Position}" />
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </DataGridTextColumn.CellStyle>
                                </DataGridTextColumn>
                                <DataGridTextColumn Width="*" Binding="{Binding Phone_City}" ClipboardContentBinding="{x:Null}" Header="Телефон" CanUserResize="True" IsReadOnly="true">
                                    <DataGridTextColumn.HeaderStyle>
                                        <Style TargetType="{x:Type DataGridColumnHeader}">
                                            <Setter Property="Background" Value="Transparent"></Setter>
                                            <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
                                            <Setter Property="FontSize" Value="10"></Setter>
                                            <Setter Property="Height" Value="auto"></Setter>
                                            <Setter Property="BorderBrush" Value="#FF343434"></Setter>
                                            <Setter Property="BorderThickness" Value="0,0,1,1"></Setter>
                                        </Style>
                                    </DataGridTextColumn.HeaderStyle>
                                    <DataGridTextColumn.CellStyle>
                                        <Style TargetType="DataGridCell">
                                            <Setter Property="ToolTip">
                                                <Setter.Value>
                                                    <TextBlock Text="{Binding Phone_City}" />
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </DataGridTextColumn.CellStyle>
                                </DataGridTextColumn>
                                <DataGridTextColumn Width="auto" Binding="{Binding Phone_Inside}" ClipboardContentBinding="{x:Null}" Header="ВТС" CanUserResize="True" IsReadOnly="true">
                                    <DataGridTextColumn.HeaderStyle>
                                        <Style TargetType="{x:Type DataGridColumnHeader}">
                                            <Setter Property="Background" Value="Transparent"></Setter>
                                            <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
                                            <Setter Property="FontSize" Value="10"></Setter>
                                            <Setter Property="Height" Value="auto"></Setter>
                                            <Setter Property="BorderBrush" Value="#FF343434"></Setter>
                                            <Setter Property="BorderThickness" Value="0,0,1,1"></Setter>
                                        </Style>
                                    </DataGridTextColumn.HeaderStyle>
                                    <DataGridTextColumn.CellStyle>
                                        <Style TargetType="DataGridCell">
                                            <Setter Property="ToolTip">
                                                <Setter.Value>
                                                    <TextBlock Text="{Binding Phone_Inside}" />
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </DataGridTextColumn.CellStyle>
                                </DataGridTextColumn>
                                <DataGridTextColumn Width="*" Binding="{Binding Address}" ClipboardContentBinding="{x:Null}" Header="Адрес" CanUserResize="True" IsReadOnly="true">
                                    <DataGridTextColumn.HeaderStyle>
                                        <Style TargetType="{x:Type DataGridColumnHeader}">
                                            <Setter Property="Background" Value="Transparent"></Setter>
                                            <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
                                            <Setter Property="FontSize" Value="10"></Setter>
                                            <Setter Property="Height" Value="auto"></Setter>
                                            <Setter Property="BorderBrush" Value="#FF343434"></Setter>
                                            <Setter Property="BorderThickness" Value="0,0,1,1"></Setter>
                                        </Style>
                                    </DataGridTextColumn.HeaderStyle>
                                    <DataGridTextColumn.CellStyle>
                                        <Style TargetType="DataGridCell">
                                            <Setter Property="ToolTip">
                                                <Setter.Value>
                                                    <TextBlock Text="{Binding Address}" />
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </DataGridTextColumn.CellStyle>
                                </DataGridTextColumn>
                                <DataGridTextColumn Width="*" Binding="{Binding Email}" ClipboardContentBinding="{x:Null}" Header="Почта" CanUserResize="True" IsReadOnly="true">
                                    <DataGridTextColumn.HeaderStyle>
                                        <Style TargetType="{x:Type DataGridColumnHeader}">
                                            <Setter Property="Background" Value="Transparent"></Setter>
                                            <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
                                            <Setter Property="FontSize" Value="10"></Setter>
                                            <Setter Property="Height" Value="auto"></Setter>
                                            <Setter Property="BorderBrush" Value="#FF343434"></Setter>
                                            <Setter Property="BorderThickness" Value="0,0,1,1"></Setter>
                                        </Style>
                                    </DataGridTextColumn.HeaderStyle>
                                    <DataGridTextColumn.CellStyle>
                                        <Style TargetType="DataGridCell">
                                            <Setter Property="ToolTip">
                                                <Setter.Value>
                                                    <TextBlock Text="{Binding Email}" />
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </DataGridTextColumn.CellStyle>
                                </DataGridTextColumn>
                            </DataGrid.Columns>
                            <DataGrid.Resources>
                                <Style BasedOn="{StaticResource {x:Type DataGridColumnHeader}}" TargetType="{x:Type DataGridColumnHeader}">
                                    <Setter Property="Background" Value="Transparent"></Setter>
                                    <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
                                    <Setter Property="FontSize" Value="10"></Setter>
                                    <Setter Property="Height" Value="auto"></Setter>
                                    <Setter Property="BorderBrush" Value="#FF343434"></Setter>
                                    <Setter Property="BorderThickness" Value="0,0,1,1"></Setter>
                                </Style>
                                <Style TargetType="DataGridCell">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Target}" Value="...">
                                            <Setter Property="Background" Value="DarkRed"></Setter>
                                            <Setter Property="Foreground" Value="White"></Setter>
                                        </DataTrigger>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter Property="Background" Value="Pink"/>
                                            <Setter Property="Foreground" Value="Black"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                                <Style TargetType="DataGridRow">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Target}" Value="...">
                                            <Setter Property="Background" Value="DarkRed"></Setter>
                                            <Setter Property="Foreground" Value="White"></Setter>
                                        </DataTrigger>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter Property="Background" Value="Pink"/>
                                            <Setter Property="Foreground" Value="Black"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGrid.Resources>
                            <DataGrid.GroupStyle>
                                <GroupStyle ContainerStyle="{StaticResource GroupHeaderStyle}">
                                    <GroupStyle.Panel>
                                        <ItemsPanelTemplate>
                                            <DataGridRowsPresenter/>
                                        </ItemsPanelTemplate>
                                    </GroupStyle.Panel>
                                </GroupStyle>
                            </DataGrid.GroupStyle>
                        </DataGrid>
                        <Border x:Name="SearchBorder2" Margin="0" BorderBrush="#FF3E3E3E" BorderThickness="1" VerticalAlignment="Top">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="20"/>
                                </Grid.ColumnDefinitions>
                                <TextBox x:Name="SearchHandbook" Grid.Column="0" VerticalContentAlignment="Center" Padding="5,0,5,0" BorderBrush="#FF343434" Background="Transparent"
                                         BorderThickness="0" Foreground="{DynamicResource ColorOne}" Height="20" TextWrapping="NoWrap" 
                                         Text="Введите ключевые слова (ФИО, Телефон, ВТС, Почта) и нажмите 'Enter'" FontSize="9" PreviewKeyUp="SearchHandbook_PreviewKeyUp"
                                          TextOptions.TextFormattingMode="Display" TextOptions.TextRenderingMode="ClearType"
                                         IsTabStop="False"
                                         GotFocus="SearchHandbook_GotFocus" LostFocus="SearchHandbook_LostFocus"/>
                                <Image x:Name="SearchHandbook_img" HorizontalAlignment="Right" Grid.Column="1" Source="Resources/lupa.png" Stretch="None" Margin="0,0,5,0"/>
                            </Grid>
                        </Border>
                    </Grid>
                </TabItem>
            </TabControl>
            <Border x:Name="SearchBorder3" Margin="310,55,0,0" Height="19" BorderBrush="#FF3E3E3E" BorderThickness="1" Width="285" VerticalAlignment="Top" HorizontalAlignment="Left">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="20"/>
                    </Grid.ColumnDefinitions>
                    <TextBox x:Name="InfoAboutOrg_RichTextBox_Search" Grid.Column="0" VerticalContentAlignment="Center" Padding="5,0,5,0" BorderBrush="#FF343434" Background="Transparent" BorderThickness="0" Foreground="{DynamicResource ColorOne}" TextWrapping="NoWrap" Text="Поиск" FontSize="9" PreviewKeyUp="InfoAboutOrg_RichTextBox_Search_PreviewKeyUp" GotFocus="InfoAboutOrg_RichTextBox_Search_GotFocus" LostFocus="InfoAboutOrg_RichTextBox_Search_LostFocus"/>
                    <Image x:Name="InfoAboutOrg_RichTextBox_Search_img" HorizontalAlignment="Right" Grid.Column="1" Source="Resources/lupa.png" Stretch="None" Margin="0,0,5,0"/>
                </Grid>
            </Border>
            <StackPanel VerticalAlignment="Bottom">
                <Border x:Name="bottomBorder" Height="23" Background="#007ACD" CornerRadius="0 0 14 14">
                    <Grid>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Margin="10,0,0,0">
                            <Image Source="Resources/info.png" Stretch="None"/>
                            <Label x:Name="VersionApp" Foreground="White" Content="_Version" HorizontalAlignment="Left" Margin="10,0,0,0" FontSize="9" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Padding="0" Height="15"/>
                            <StackPanel x:Name="BirthDayPanelInfo" Visibility="Hidden" Margin="20,0,0,0" Orientation="Horizontal">
                                <Image Source="Resources/birthdayinfo.png" Stretch="None"/>
                                <Label x:Name="BirthDayLabel" Content="" HorizontalAlignment="Left" Margin="5,0,0,0" FontSize="9" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Padding="0" Height="15"/>
                            </StackPanel>
                        </StackPanel>
                        <StackPanel x:Name="SP_InfoUpdateDate" Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,0,10,0">
                            <Button x:Name="CountUsersBtn" Click="CountUsersBtn_Click" Margin="0,0,20,0" Padding="0">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <Image Source="Resources/users.png" Height="15" Grid.Column="1"/>
                                    <Label x:Name="CountUserslbl" Content="0" Grid.Column="0"/>
                                </Grid>
                            </Button>
                            <Popup x:Name="CountUsersPopup" StaysOpen="False" PopupAnimation="Scroll" 
                           AllowsTransparency="True" Placement="Mouse">
                                <Border MinWidth="100" MinHeight="100" Background="{StaticResource ColorTwo}">
                                    <Grid>
                                        <DataGrid x:Name="CountUsersdg" AutoGenerateColumns="False" IsReadOnly="True" Background="Transparent">
                                            <DataGrid.RowStyle>
                                                <Style TargetType="DataGridRow">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding isanswered}" Value="True">
                                                            <Setter Property="Background" Value="#d0ffcc"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding isanswered}" Value="False">
                                                            <Setter Property="Background" Value="#ffcccc"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </DataGrid.RowStyle>
                                            <DataGrid.Columns>
                                                <DataGridTextColumn Header="Дата входа" Binding="{Binding enter_dt,StringFormat={}{0:dd.MM.yyyy HH:mm:ss}}"/>
                                                <DataGridTextColumn Header="IP" Binding="{Binding ip}"/>
                                                <DataGridTextColumn Header="Логин" Binding="{Binding username}"/>
                                                <DataGridTextColumn Header="ФИО" Binding="{Binding perhabs_fio}"/>
                                                <DataGridTextColumn Header="Email" Binding="{Binding perhabs_email}"/>
                                                <DataGridTextColumn Header="Обновлено" Binding="{Binding update_dt,StringFormat={}{0:dd.MM.yyyy HH:mm:ss}}"/>
                                            </DataGrid.Columns>
                                        </DataGrid>
                                    </Grid>
                                </Border>
                            </Popup>
                            <Image x:Name="InfoUpdateDataGif" gif:ImageBehavior.AnimatedSource="Resources/load.gif" Height="15" />
                            <Image x:Name="InfoUpdateDataImg" Stretch="None" Margin="0,0,5,0" />
                            <Label x:Name="InfoUpdateData" Foreground="White" Content="%RUNBP%" HorizontalAlignment="Right" FontSize="9" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Padding="0,0,0,0" Margin="0,0,0,0" Height="15"/>
                        </StackPanel>
                    </Grid>
                </Border>
            </StackPanel>
            <Image x:Name="image" HorizontalAlignment="Left" Height="21" Margin="10,10,0,0" VerticalAlignment="Top" Source="Resources/logo.png" RenderOptions.BitmapScalingMode="HighQuality"/>
            <Label x:Name="NameApp" VerticalContentAlignment="Center" Content="0" FontWeight="Medium" ContentStringFormat="{}Dagorlad (CPU Usage: {0} %)"
                   HorizontalAlignment="Left" VerticalAlignment="Top" Margin="35,10,0,0" Padding="0" Height="21"/>
            <StackPanel Orientation="Horizontal" VerticalAlignment="Top" Height="40" Margin="0,0,10,0" HorizontalAlignment="Right">
                <Button x:Name="Chatbtn" ToolTip="Чат (бета)" HorizontalAlignment="Left" Padding="0" Margin="0,0,5,0" VerticalAlignment="Center" Click="Chatbtn_Click" Background="Transparent" BorderThickness="0">
                    <Image x:Name="chatimg" Source="Resources/chat.png" Stretch="None"/>
                </Button>
                <Button x:Name="About" ToolTip="О программе" HorizontalAlignment="Left" Padding="0" Margin="0,0,5,0" VerticalAlignment="Center" Click="About_Click" Background="Transparent" BorderThickness="0">
                    <Image x:Name="aboutimg" Source="Resources/about.png" Stretch="None"/>
                </Button>
                <Button x:Name="RefreshHook" Background="Transparent" Padding="0" HorizontalAlignment="Left" Margin="0,0,5,0" VerticalAlignment="Center" BorderThickness="0" Click="RefreshHook_Click" ToolTip="Перезагрузка функций использования глобальных клавиш">
                    <Image x:Name="RefreshHookImg" Source="Resources/refresh.png" Stretch="None"/>
                </Button>
                <Image x:Name="PinOnOff" HorizontalAlignment="Left" Margin="0,0,5,0" Height="26" Source="Resources/pinunlock.png" ToolTip="Закрепить/открепить поверх всех окон" MouseLeftButtonDown="PinOnOff_MouseLeftButtonDown" VerticalAlignment="Center"/>
                <Button ToolTip="Если обнаружены ошибки, либо есть пожелания" Padding="0" x:Name="BugsReports" HorizontalAlignment="Left" Margin="0,0,30,0" VerticalAlignment="Center" Background="Transparent" BorderThickness="0" Click="BugsReports_Click">
                    <Image x:Name="bugsfiles" Stretch="None" Source="Resources/bug.png"/>
                </Button>
                <Button x:Name="ShowUsersBtn" ToolTip="Список сотрудников" HorizontalAlignment="Left" Padding="0" Margin="0,0,5,0" Background="Transparent" BorderThickness="0" Click="ShowUsersBtn_Click" VerticalAlignment="Center">
                    <Image x:Name="employeesimg" Source="Resources/Employees.png" Stretch="None"/>
                </Button>
                <Button x:Name="SettingsWindow" ToolTip="Настройки" HorizontalAlignment="Left" Padding="0" Margin="0,0,30,0" VerticalAlignment="Center" Click="SettingsWindow_Click" Background="Transparent" BorderThickness="0">
                    <Image x:Name="settingsimg" Source="Resources/settings.png" Stretch="None"/>
                </Button>
                <Button x:Name="WindowStateHidden" ToolTip="Свернуть окно" Padding="0" HorizontalAlignment="Left" Margin="0,0,5,0" Background="Transparent" BorderThickness="0" Click="WindowStateHidden_Click" VerticalAlignment="Center">
                    <Image x:Name="minimizeimg" Source="Resources/minimize.png" Stretch="None"/>
                </Button>
                <Button x:Name="WindowStateMax" ToolTip="Развернуть окно" Padding="0" HorizontalAlignment="Left" Margin="0,0,5,0" Background="Transparent" BorderThickness="0" Click="WindowStateMax_Click" VerticalAlignment="Center">
                    <Image x:Name="maximg" Source="Resources/maximize.png" Stretch="None"/>
                </Button>
                <Button x:Name="CloseApplication" ToolTip="Закрыть программу" Padding="0" HorizontalAlignment="Left" Margin="0" Background="Transparent" BorderThickness="0" Click="CloseApplication_Click" VerticalAlignment="Center">
                    <Image x:Name="closeimg" Source="Resources/close.png" Stretch="None"/>
                </Button>
            </StackPanel>
            <Image x:Name="OnOff_ScriptBtn" HorizontalAlignment="Left" Height="38" Margin="10,211,0,0" VerticalAlignment="Top" Source="Resources/button_off.png" MouseLeftButtonDown="OnOff_ScriptBtn_MouseLeftButtonDown" ToolTip="Вкл/Откл работу скрипта" Width="38"/>
            <Label Content="Выключить/Включить" FontSize="10" HorizontalAlignment="Left" Margin="53,211,0,0" VerticalAlignment="Top" Height="38" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Width="112" ToolTip="Вкл/Откл работу скрипта"/>
            <Label Content="Скрипт (Middle Button and Keys)" FontWeight="Medium" HorizontalAlignment="Left" Margin="10,187,0,0" VerticalAlignment="Top" FontSize="10" RenderTransformOrigin="0.438,0.435" ToolTip="При нажатии правой кнопки мыши появится контекстное меню с экземпярами типичных ответов" Height="24" VerticalContentAlignment="Center"/>
        </Grid>
    </Border>
</Window>
